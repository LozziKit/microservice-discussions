swagger: '2.0'
info:
  title: Microservice-Discussion API
  description: Move your app forward with the Discussion API
  version: 0.0.1
host: localhost:8080
basePath: /api
schemes:
  - http
paths:
  /comments:
    post:
      summary: Register a comment
      description: The /comments endpoint allows a user to register a comment to an article or another comment of an article.
      parameters:
        - in: query
          name: articleID
          type: integer
          format: int64
          required: true
          description: The ID of the associated article.
        - in: query
          name: parentID
          type: integer
          format: int64
          description: (Optionnal) The ID of the responded comment.
        - in: body
          name: comment
          description: The comment the user want to post
          required: true
          schema:
            $ref: '#/definitions/CommentRequest'
      tags:
        - Comments
      responses:
        '201':
          description: Comment successfully posted
          schema:
            type: object
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get the comments of an article
      description: The /comments endpoint allows a user to retreive all of the comments associated to an article.
      parameters:
        - name: articleID
          in: query
          description: The articleID the user want to list comment from
          required: true
          type: integer
          format: int64
        - name: tree
          in: query
          description: Define the way we want to retrive all the comments
          required: false
          type: boolean
          default: false
      tags:
        - Comments
      responses:
        '200':
          description: The list of the comments
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/comments/{id}':
    get:
      summary: Get the comments of an article
      description: The /comments/{id} endpoint allows a user to retreive one comments associated to an article.
      parameters:
        - name: id
          in: path
          description: ID of the comment we want to retrive.
          required: true
          type: integer
          format: int64
      tags:
        - Comments
      responses:
        '200':
          description: The list of the comments
          schema:
            $ref: '#/definitions/CommentResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a comment
      description: 'The /comments/{id} endpoint allows a user to update a comment.'
      parameters:
        - name: id
          in: path
          description: ID of the comment we want to edit.
          required: true
          type: integer
          format: int64
        - name: comment
          in: body
          description: The comment the user want to post
          required: true
          schema:
            $ref: '#/definitions/CommentRequest'
      tags:
        - Comments
      responses:
        '200':
          description: The registered comment
          schema:
            type: object
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete a comment
      description: This endpoint allows a user to delete a comment.
      parameters:
        - name: id
          in: path
          description: ID of the comment we want to delete
          required: true
          type: integer
          format: int64
      tags:
        - Comments
      responses:
        '204':
          description: The comment has been successfully deleted
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  CommentRequest:
    type: object
    required:
      - authorID
      - author
      - message
    properties:
      authorID:
        type: integer
        format: int64
        description: The ID of the comment author. (To be linked with the user microservice)
      author:
        type: string
        description: The name of the creator of the comment
      message:
        type: string
        description: The content of the comment.
  CommentResponse:
    properties:
      authorID:
        type: integer
        format: int64
        description: The ID of the comment author. (To be linked with the user microservice)
      author:
        type: string
        description: The name of the creator of the comment
      message:
        type: string
        description: The content of the comment.
      articleID:
        type: integer
        format: int64
        description: The ID of the associated article.
      parentID:
        type: integer
        format: int64
        description: (Optionnal) The ID of the responded comment.
      root:
        type: boolean
        description: If a comment as no response
      id:
        type: integer
        format: int64
        description: The ID of the comment
      date:
        type: string
        format: date-time
        description: Display name of product.
      children:
        type: array
        items:
          $ref: '#/definitions/CommentResponse'
    required:
      - authorID
      - author
      - message
      - articleID
      - root
      - id
      - date
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string